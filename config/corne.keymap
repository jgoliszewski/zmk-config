/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define MEDIA   4
#define LEFT_DESK LG(LC(LEFT))
#define RIGHT_DESK LG(LC(RIGHT))
#define TASK_MAN LC(LS(ESC))

&mt {
    tapping-term-ms = <140>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        email_main {
            bindings = <&email_main>;
            key-positions = <17 4>;
            layers = <0>;
        };
    };

    macros {
        email_main: email_main {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp J &kp A &kp K &kp U &kp B &kp DOT &kp G &kp O &kp L &kp I &kp S &kp Z &kp E &kp W &kp S &kp K &kp I &kp N0 &kp N1 &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL_MAIN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |      |
            // |      |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |      |
            // |      |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&trans  &kp Q       &kp W       &kp E          &kp R            &kp T      &kp Y     &kp U            &kp I        &kp O       &kp P          &trans
&trans  &mt RGUI A  &mt LALT S  &mt LSHFT D    &mt LCTRL F      &kp G      &kp H     &mt RCTRL J      &mt RSHFT K  &mt RALT L  &mt RGUI SEMI  &trans
&trans  &kp Z       &kp X       &kp C          &kp V            &kp B      &kp N     &kp M            &kp COMMA    &kp DOT     &kp FSLH       &trans
                                &lt MEDIA ESC  &lt LOWER SPACE  &kp TAB    &kp BSPC  &lt RAISE ENTER  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&trans  &kp BSPC  &kp N7  &kp N8   &kp N9           &kp MINUS      &trans      &trans           &trans    &trans  &trans          &trans
&trans  &kp N0    &kp N4  &kp N5   &kp N6           &kp KP_PLUS    &kp TILDE2  &kp LEFT_DESK    &trans    &trans  &kp RIGHT_DESK  &trans
&trans  &kp DOT   &kp N1  &kp N2   &kp N3           &kp ENTER      &kp GRAVE   &kp TASK_MAN     &trans    &trans  &trans          &trans
                          &kp DEL  &lt LOWER SPACE  &kp TAB        &kp BSPC    &lt RAISE ENTER  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&trans  &kp EXCL     &kp LBRC       &kp RBRC        &kp DLLR            &kp PRCNT    &kp CARET  &kp AMPS         &kp KP_MULTIPLY  &kp PIPE  &kp BSLH   &trans
&trans  &mt LGUI AT  &mt LALT LPAR  &mt LSHFT RPAR  &mt LCTRL KP_MINUS  &kp PLUS     &kp DQT    &kp LEFT         &kp UP           &kp DOWN  &kp RIGHT  &trans
&trans  &kp HASH     &kp LBKT       &kp RBKT        &kp EQUAL           &kp UNDER    &kp APOS   &kp HOME         &kp N0           &kp DEL   &kp END    &trans
                                    &lt MEDIA ESC   &lt LOWER SPACE     &kp TAB      &kp BSPC   &lt RAISE ENTER  &kp RALT
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&trans  &trans  &trans        &trans         &trans           &trans        &trans    &kp F7           &kp F8    &kp F9  &kp F12  &trans
&trans  &trans  &bt BT_SEL 3  &bt BT_SEL 4   &trans           &trans        &trans    &kp F4           &kp F5    &kp F6  &kp F11  &trans
&trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2     &bt BT_CLR    &trans    &kp F1           &kp F2    &kp F3  &kp F10  &trans
                              &lt MEDIA ESC  &lt LOWER SPACE  &kp TAB       &kp BSPC  &lt RAISE ENTER  &kp RALT
            >;
        };

        media_layer {
            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&trans  &kp C_VOL_DN  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT       &kp C_VOL_UP    &trans    &trans           &trans    &trans  &trans  &trans
&trans  &trans        &trans      &trans            &trans           &trans          &trans    &trans           &trans    &trans  &trans  &trans
&trans  &trans        &trans      &trans            &trans           &trans          &trans    &trans           &trans    &trans  &trans  &trans
                                  &lt MEDIA ESC     &lt LOWER SPACE  &kp TAB         &kp BSPC  &lt RAISE ENTER  &kp RALT
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
